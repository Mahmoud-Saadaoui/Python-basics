# DÃ©claration de base
ma_liste = [1, 2, 3, 2, 4]

# ğŸ“Œ 1. append(x) â†’ Ajoute un Ã©lÃ©ment Ã  la fin
ma_liste.append(5)
print("append:", ma_liste)  # [1, 2, 3, 2, 4, 5]

# ğŸ“Œ 2. extend(iterable) â†’ Ã‰tend la liste avec un autre iterable
ma_liste.extend([6, 7])
print("extend:", ma_liste)  # [1, 2, 3, 2, 4, 5, 6, 7]

# ğŸ“Œ 3. insert(i, x) â†’ InsÃ¨re x Ã  la position i
ma_liste.insert(2, 99)
print("insert:", ma_liste)  # [1, 2, 99, 3, 2, 4, 5, 6, 7]

# ğŸ“Œ 4. remove(x) â†’ Supprime la premiÃ¨re occurrence de x
ma_liste.remove(2)
print("remove:", ma_liste)  # [1, 99, 3, 2, 4, 5, 6, 7]

# ğŸ“Œ 5. pop([i]) â†’ Supprime et retourne l'Ã©lÃ©ment Ã  lâ€™index i (dernier si pas prÃ©cisÃ©)
dernier = ma_liste.pop()
print("pop:", dernier, ma_liste)  # 7 [1, 99, 3, 2, 4, 5, 6]

# ğŸ“Œ 6. clear() â†’ Vide la liste
temp = [1, 2, 3]
temp.clear()
print("clear:", temp)  # []

# ğŸ“Œ 7. index(x) â†’ Retourne lâ€™index de la premiÃ¨re occurrence de x
print("index of 4:", ma_liste.index(4))  # 4

# ğŸ“Œ 8. count(x) â†’ Nombre dâ€™occurrences de x
print("count of 2:", ma_liste.count(2))  # 1

# ğŸ“Œ 9. sort() â†’ Trie la liste (ordre croissant par dÃ©faut)
tri = [3, 1, 4, 2]
tri.sort()
print("sort:", tri)  # [1, 2, 3, 4]

# Tri dÃ©croissant
tri.sort(reverse=True)
print("sort reverse:", tri)  # [4, 3, 2, 1]

# ğŸ“Œ 10. reverse() â†’ Inverse lâ€™ordre des Ã©lÃ©ments
tri.reverse()
print("reverse:", tri)  # [1, 2, 3, 4]

# ğŸ“Œ 11. copy() â†’ CrÃ©e une copie superficielle de la liste
copie = tri.copy()
print("copy:", copie)  # [1, 2, 3, 4]
  
# Recap
#  _________________________________________________________
# | MÃ©thode        | Description                            |
# | -------------- | -------------------------------------- |
# | `append(x)`    | Ajoute un Ã©lÃ©ment Ã  la fin             |
# | `extend(it)`   | Ajoute tous les Ã©lÃ©ments dâ€™un itÃ©rable |
# | `insert(i, x)` | InsÃ¨re Ã  lâ€™index `i`                   |
# | `remove(x)`    | Supprime la **premiÃ¨re** occurrence    |
# | `pop(i)`       | Supprime et retourne lâ€™Ã©lÃ©ment Ã  `i`   |
# | `clear()`      | Vide la liste                          |
# | `index(x)`     | Renvoie lâ€™index de `x`                 |
# | `count(x)`     | Nombre dâ€™occurrences                   |
# | `sort()`       | Trie la liste                          |
# | `reverse()`    | Inverse la liste                       |
# | `copy()`       | Fait une copie                         |
